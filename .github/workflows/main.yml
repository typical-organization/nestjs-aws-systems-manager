name: NPM Publish

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for NPM provenance
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Verify package.json version matches release tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          RELEASE_TAG=${GITHUB_REF#refs/tags/v}
          if [ "$PACKAGE_VERSION" != "$RELEASE_TAG" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) does not match release tag ($RELEASE_TAG)"
            exit 1
          fi
          echo "‚úÖ Version validation passed: $PACKAGE_VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test:cov

      - name: Build TypeScript
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found after build"
            exit 1
          fi
          echo "‚úÖ Build verification passed"
          echo "Build artifacts:"
          ls -la dist/

      - name: Dry-run publish check
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify package contents
        run: |
          npm pack --dry-run
          echo "‚úÖ Package contents verified"

      - name: Check package size
        run: |
          PACKAGE_SIZE=$(npm pack --dry-run 2>&1 | grep -oP 'package size:\s+\K[\d.]+\s+\w+' || echo "unknown")
          echo "üì¶ Package size: $PACKAGE_SIZE"
          
          # Extract size in KB for threshold check
          SIZE_KB=$(npm pack --dry-run 2>&1 | grep 'package size' | awk '{print $3}' || echo "0")
          if (( $(echo "$SIZE_KB > 500" | bc -l 2>/dev/null || echo "0") )); then
            echo "‚ö†Ô∏è Warning: Package size exceeds 500KB"
          else
            echo "‚úÖ Package size is within acceptable limits"
          fi

      - name: Publish to NPM with provenance
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM package availability
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          # Wait for NPM registry to update (increased from 30s to 2 minutes)
          echo "‚è≥ Waiting for NPM registry to update..."
          
          # Retry up to 6 times with 20 second intervals (total 2 minutes)
          MAX_RETRIES=6
          RETRY_INTERVAL=20
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "üîç Attempt $RETRY_COUNT of $MAX_RETRIES..."
            
            if npm view $PACKAGE_NAME@$PACKAGE_VERSION > /dev/null 2>&1; then
              echo "‚úÖ Package successfully published and available on NPM"
              exit 0
            fi
            
            if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
              echo "‚è≥ Package not yet available, waiting ${RETRY_INTERVAL}s before retry..."
              sleep $RETRY_INTERVAL
            fi
          done
          
          echo "‚ùå Package not found on NPM registry after $((MAX_RETRIES * RETRY_INTERVAL)) seconds"
          echo "‚ÑπÔ∏è  This might be a temporary registry delay. Check manually at:"
          echo "   https://www.npmjs.com/package/$PACKAGE_NAME"
          exit 1
